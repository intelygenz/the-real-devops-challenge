apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mongodb.fullname" . }}
  labels:
{{ include "mongodb.labels" . | indent 4 }}
spec:
  serviceName: {{ include "mongodb.fullname" . }}
  replicas: 1
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
    {{- if (eq "Recreate" .Values.updateStrategy.type) }}
    rollingUpdate: null
    {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mongodb.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mongodb.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ default (include "mongodb.fullname" . ) .Values.serviceAccount.name }}
      {{- end }}      
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: {{ .Values.mongoRootUser }}
            - name: MONGO_INITDB_ROOT_PASSWORD_FILE
              value: {{ include "mongodb.secretRootPath" . }}            
            - name: MONGO_INITDB_DATABASE
              value: {{ .Values.mongoDatabase }}
            - name: MONGO_INITDB_USERNAME
              value: {{ .Values.mongoUserUser }}
            - name: MONGO_INITDB_PASSWORD_FILE
              value: {{ include "mongodb.secretUserPath" . }}            
            - name: MONGODB_DATA_DIR
              value: {{ .Values.persistence.mountPath }}  
            - name: MONGO_DATASET
              value: {{ .Values.datasetName }}                                                    
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }} 
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- end }}
            - name: root-pwd
              mountPath: {{ .Values.mongoRootPasswordFilePath }} 
              readOnly: true
            - name: root-user
              mountPath: {{ .Values.mongoUserPasswordFilePath }}  
              readOnly: true 
            - name: mongo-configuration
              mountPath: /docker-entrypoint-initdb.d/init-mongo.sh
              subPath: init-mongo.sh
            - name: mongo-configuration
              mountPath: /config/{{ .Values.datasetName }}
              subPath: {{ .Values.datasetName }}                                          
      volumes:
        - name: root-pwd
          secret:
{{- if (include "mongodb.createRootSecret" .) }}       
            secretName: {{ include "mongodb.secretRootName" . }}
{{- else }}
            secretName: {{ .Values.existingRootSecret }}
{{- end }}
        - name: root-user
          secret:
{{- if (include "mongodb.createUserSecret" .) }}       
            secretName: {{ include "mongodb.secretUserName" . }}
{{- else }}
            secretName: {{ .Values.existingUserSecret }}
{{- end }}  
        - name: mongo-configuration
{{- if (include "mongodb.createConfigmap" .) }}          
          configMap:
            name: {{ include "mongodb.configmapName" . }}
{{- else }}
            name: {{ .Values.existingConfigmap }}
{{- end }}
{{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
{{- with .Values.persistence.existingClaim }}
            claimName: {{ tpl . $ }}
{{- end }}
{{- else if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
{{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: data
      {{- with .Values.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        storageClassName: {{ .Values.persistence.storageClassName | quote }}
{{- end }}