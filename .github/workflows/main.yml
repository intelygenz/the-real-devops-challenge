name: Python test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.5", "3.6", "3.7", "3.8"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Setup python version
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
          
      - name: Install requirements_dev packages
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements_dev.txt ]; then pip install -r requirements_dev.txt; fi
      # Runs a set of commands using the runners shell
      - name: Run tox
        # Run tox using the version of Python in `PATH`
        run: tox -e py
        env:
          MONGO_URI: "mongodb://localhost:27017/"

  docker:
    needs: test
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          registry: ${{ secrets.REGISTRY_HOST }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      -
        name: Build and push application
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          # context: .
          # platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          # push: true
          tags: |
            ${{ secrets.REGISTRY_HOST }}/${{ secrets.REGISTRY_REPOSITORY }}:latest
      -
        name: Build and push application
        id: docker_build_mongo
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          context: mongo
          # platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          # push: true
          tags: |
            ${{ secrets.REGISTRY_HOST }}/${{ secrets.REGISTRY_REPOSITORY }}:latest
      -
        name: Build and push application
        id: docker_build_mongoseed
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile-seed
          context: mongo
          # platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          # push: true
          tags: |
            ${{ secrets.REGISTRY_HOST }}/${{ secrets.REGISTRY_REPOSITORY }}:latest
